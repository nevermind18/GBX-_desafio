package desafio.gbx.desafio.entity;import jakarta.persistence.*;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.List;@Data@Entity@NoArgsConstructor@AllArgsConstructorpublic class UsuarioEntity implements UserDetails {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    private long id;    private String nome;    private long numeroConta;    private double saldo;    private String senha;    public UsuarioEntity(String nome, long numeroConta, double saldo) {        this.nome = nome;        this.numeroConta = numeroConta;        this.saldo = saldo;    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return List.of(new SimpleGrantedAuthority("ROLE_USER"));    }    @Override    public String getPassword() {        return senha;    }    @Override    public String getUsername() {        return nome;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return true;    }}